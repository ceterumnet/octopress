<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dave's Blog]]></title>
  <link href="http://ceterumnet.github.com/atom.xml" rel="self"/>
  <link href="http://ceterumnet.github.com/"/>
  <updated>2012-03-23T10:12:41-05:00</updated>
  <id>http://ceterumnet.github.com/</id>
  <author>
    <name><![CDATA[David Raphael]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[getting started with my 3d printer]]></title>
    <link href="http://ceterumnet.github.com/blog/2012/03/23/getting-started-with-my-3d-printer/"/>
    <updated>2012-03-23T10:09:00-05:00</updated>
    <id>http://ceterumnet.github.com/blog/2012/03/23/getting-started-with-my-3d-printer</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Blog Engine!]]></title>
    <link href="http://ceterumnet.github.com/blog/2012/03/16/new-blog/"/>
    <updated>2012-03-16T14:27:00-05:00</updated>
    <id>http://ceterumnet.github.com/blog/2012/03/16/new-blog</id>
    <content type="html"><![CDATA[<p>I have deliberated for a while now on what to do with my blog.  I have not been particularly active in my blogging, but I have definitely been thinking about a number of things I need to blog about.  However, I found that my blogging engine (Typo) was very limiting for me.  It turns out, that most blogging engines are limiting to me.  I am not very comfortable using a web UI for my workflow!  I am a coder that uses SVN, git etc&#8230;day in and day out for my daily work.  So I asked my friend, Glenn Vanderburg, if he had any ideas - and he suggested Octopress.</p>

<p>So far, it seems that <a href="http://octopress.org/">Octopress</a> really fits the bill.  I generally like using a text editor and version control for everything - including documentation.  I am somewhat of a fan of wikis, but I prefer having raw access to my source trees.  So Octopress really allows you to hack away at your blog, and then push and deploy just like you would any other software.</p>

<p>Migration was easy since I didn&#8217;t really have that much content to begin with.  I simply cut and pasted my blog content into new articles generated through rake.  I&#8217;ll recap the steps I took:</p>

<ol>
<li>First, I forked Octopress from github</li>
<li>Next, I edited _config.yml to reflect my site configuration&#8230;this is pretty self explanatory.</li>
<li>Then, I generated new posts via <code>rake new_post["..."]</code></li>
<li>I edited those posts to reflect the original publication date from my former blog</li>
<li>Finally, I tested everything using <code>rake preview</code></li>
<li>Once everything was to my liking, I edited my remote server nginx configuration to point at a directory I created to hold my content.</li>
<li>Restarted nginx on my remote server</li>
<li>ran <code>rake deploy</code></li>
<li>BAM!  It was done.</li>
</ol>


<p>I absolutely love this new approach to my blog so far.  It is static content!!!  No database&#8230;at least not for now.  I hope that this can stay as static as possible.  I really just want a place to call my home page where I can rant and write about my hobbies and code etc&#8230; without thinking about another web application that I have to manage.  Not to mention - I don&#8217;t like working through a web based workflow to being with, so this really lends itself to a hacker style blog!  I&#8217;ll just have to get up to speed with all of the various formatting options&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git Tips and Tricks]]></title>
    <link href="http://ceterumnet.github.com/blog/2010/05/17/git-tips-and-tricks/"/>
    <updated>2010-05-17T14:04:00-05:00</updated>
    <id>http://ceterumnet.github.com/blog/2010/05/17/git-tips-and-tricks</id>
    <content type="html"><![CDATA[<p>This is a sweet way of getting current git info in your prompt in OS X…this saves me from those “damn, I’m on the wrong branch…” moments - <a href="http://www.codethatmatters.com/2010/01/git-autocomplete-in-mac-os-x/">http://www.codethatmatters.com/2010/01/git-autocomplete-in-mac-os-x/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[using git with a proxy]]></title>
    <link href="http://ceterumnet.github.com/blog/2010/05/03/using-git-with-a-proxy/"/>
    <updated>2010-05-03T14:09:00-05:00</updated>
    <id>http://ceterumnet.github.com/blog/2010/05/03/using-git-with-a-proxy</id>
    <content type="html"><![CDATA[<p>Some of us are stuck behind a corporate firewall, but need to access all the great little github plugins through git!  So what do you do?</p>

<p>Create the following wrapper:</p>

<figure class='code'><figcaption><span>( ~/bin/proxy-wrapper ):</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!/bin/sh
</span><span class='line'>
</span><span class='line'>Put your own values
</span><span class='line'>
</span><span class='line'><span class="nv">PROXY_IP</span><span class="o">=</span>127.0.0.1
</span><span class='line'><span class="nv">PROXY_PORT</span><span class="o">=</span>1090
</span><span class='line'>
</span><span class='line'>nc -x<span class="k">${</span><span class="nv">PROXY_IP</span><span class="k">}</span>:<span class="k">${</span><span class="nv">PROXY_PORT</span><span class="k">}</span> -X5 <span class="nv">$*</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>add this to your ~/.profile or ~/.bash_rc etc…</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">GIT_PROXY_COMMAND</span><span class="o">=</span>~/bin/proxy-wrapper
</span></code></pre></td></tr></table></div></figure>


<p>I stole this solution from <a href="http://blogs.gnome.org/juanje/2009/07/17/git_behind_proxy/">http://blogs.gnome.org/juanje/2009/07/17/git_behind_proxy/</a></p>

<p>Cheers, Dave</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Security on Rails is Beta!]]></title>
    <link href="http://ceterumnet.github.com/blog/2010/04/16/security-on-rails-is-beta-slash/"/>
    <updated>2010-04-16T14:13:00-05:00</updated>
    <id>http://ceterumnet.github.com/blog/2010/04/16/security-on-rails-is-beta-slash</id>
    <content type="html"><![CDATA[<p>Our book is now available as a Pragmatic Bookshelf Beta - <a href="http://pragprog.com/book/fr_secure/security-on-rails">Security on Rails</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[0% Interest for 6 Months]]></title>
    <link href="http://ceterumnet.github.com/blog/2010/01/25/0-percent-interest-for-6-months/"/>
    <updated>2010-01-25T14:14:00-06:00</updated>
    <id>http://ceterumnet.github.com/blog/2010/01/25/0-percent-interest-for-6-months</id>
    <content type="html"><![CDATA[<p>Rapid Application Development is not a technology, but it is a mindset that is prevalent in a very small percentage of developers.  This mindset involves an obsession with code quality and never letting the code base get out in front of the developers.  It’s the same mentality that &#8220;The Millionaire Next Door&#8221; preaches - save money, don’t accumulate debt, live below your means, etc…</p>

<p>We win the race of great software through diligent unit testing, refactoring, coding standards and frequent releases.  Any tool or toolset that doesn’t allow us to manage the source code at a source code level will only detract from this ability to deliver great software.  Sure, we can use RAD tools that generate copious amounts of code.  But that code becomes stale, and it doesn’t evolve with our software.  It’s a lot like 0% interest financing.  It’s a way to get something that doesn’t have a fiscal impact in the first 6 months of ownership.  But those payments are due after the 6 months pass - with accrued interest.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding without Unit Tests is like using a Credit Card]]></title>
    <link href="http://ceterumnet.github.com/blog/2009/01/30/coding-without-unit-tests-is-like-using-a-credit-card/"/>
    <updated>2009-01-30T14:15:00-06:00</updated>
    <id>http://ceterumnet.github.com/blog/2009/01/30/coding-without-unit-tests-is-like-using-a-credit-card</id>
    <content type="html"><![CDATA[<p>Occasionally I find myself a few days (or sometimes weeks) into some piece of code that I’ve been working on without good test coverage. I just realized that it’s the same feeling I get when I use a credit card. I know I’ll be in trouble if I don’t take care of it ASAP.</p>
]]></content>
  </entry>
  
</feed>
